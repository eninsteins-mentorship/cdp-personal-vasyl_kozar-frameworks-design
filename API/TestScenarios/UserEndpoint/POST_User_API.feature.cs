// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace API.TestScenarios.UserEndpoint
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("POST_User_API")]
    public partial class POST_User_APIFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "POST_User_API.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "POST_User_API", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Placeholder",
                        "Value"});
#line 4
 testRunner.Given("I make \'POST\' request to \'/users\'", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Placeholder",
                        "Value"});
            table2.AddRow(new string[] {
                        "Content-Type",
                        "application/json"});
#line 6
 testRunner.And("request contains headers", ((string)(null)), table2, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01_Create User using API call")]
        public virtual void _01_CreateUserUsingAPICall()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_Create User using API call", null, ((string[])(null)));
#line 10
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Attribute",
                        "Type",
                        "Value"});
#line 11
 testRunner.Given("request has body from file \'User\\user_create.json\'", ((string)(null)), table3, "Given ");
#line 13
 testRunner.When("I send a request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
 testRunner.Then("response code is \'201\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Attribute",
                        "Type",
                        "Value"});
            table4.AddRow(new string[] {
                        "name",
                        "string",
                        "Dastin Hoffman"});
#line 15
 testRunner.And("response has fallowing attribute:", ((string)(null)), table4, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02_Create User without name")]
        public virtual void _02_CreateUserWithoutName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_Create User without name", null, ((string[])(null)));
#line 19
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Attribute",
                        "Type",
                        "Value"});
            table5.AddRow(new string[] {
                        "name",
                        "null",
                        ""});
#line 20
 testRunner.Given("request has body from file \'User\\user_create.json\'", ((string)(null)), table5, "Given ");
#line 23
 testRunner.When("I send a request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then("response code is \'201\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03_Create User without username")]
        public virtual void _03_CreateUserWithoutUsername()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_Create User without username", null, ((string[])(null)));
#line 26
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Attribute",
                        "Type",
                        "Value"});
            table6.AddRow(new string[] {
                        "username",
                        "null",
                        ""});
#line 27
 testRunner.Given("request has body from file \'User\\user_create.json\'", ((string)(null)), table6, "Given ");
#line 30
 testRunner.When("I send a request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
 testRunner.Then("response code is \'201\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04_Create User without username")]
        public virtual void _04_CreateUserWithoutUsername()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04_Create User without username", null, ((string[])(null)));
#line 33
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Attribute",
                        "Type",
                        "Value"});
            table7.AddRow(new string[] {
                        "email",
                        "null",
                        ""});
#line 34
 testRunner.Given("request has body from file \'User\\user_create.json\'", ((string)(null)), table7, "Given ");
#line 37
 testRunner.When("I send a request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
 testRunner.Then("response code is \'201\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("05_Create User without Address field")]
        [NUnit.Framework.TestCaseAttribute("null", "Apt. 71", "London", "92998-3874", null)]
        [NUnit.Framework.TestCaseAttribute("Light Avenue", "null", "London", "92998-3874", null)]
        [NUnit.Framework.TestCaseAttribute("Light Avenue", "Apt. 71", "null", "92998-3874", null)]
        [NUnit.Framework.TestCaseAttribute("Light Avenue", "Apt. 71", "London", "null", null)]
        public virtual void _05_CreateUserWithoutAddressField(string street, string suite, string city, string zipcode, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05_Create User without Address field", null, exampleTags);
#line 40
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Attribute",
                        "Type",
                        "Value"});
            table8.AddRow(new string[] {
                        "address.street",
                        "string",
                        string.Format("{0}", street)});
            table8.AddRow(new string[] {
                        "address.suite",
                        "string",
                        string.Format("{0}", suite)});
            table8.AddRow(new string[] {
                        "address.city",
                        "string",
                        string.Format("{0}", city)});
            table8.AddRow(new string[] {
                        "address.zipcode",
                        "string",
                        string.Format("{0}", zipcode)});
#line 41
 testRunner.Given("request has body from file \'User\\user_create.json\'", ((string)(null)), table8, "Given ");
#line 47
 testRunner.When("I send a request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
 testRunner.Then("response code is \'201\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("06_Create User without Geo field")]
        [NUnit.Framework.TestCaseAttribute("null", "81.1496", null)]
        [NUnit.Framework.TestCaseAttribute("-37.3159", "null", null)]
        public virtual void _06_CreateUserWithoutGeoField(string lat, string lng, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06_Create User without Geo field", null, exampleTags);
#line 56
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Attribute",
                        "Type",
                        "Value"});
            table9.AddRow(new string[] {
                        "geo.lat",
                        "string",
                        string.Format("{0}", lat)});
            table9.AddRow(new string[] {
                        "geo.lng",
                        "string",
                        string.Format("{0}", lng)});
#line 57
 testRunner.Given("request has body from file \'User\\user_create.json\'", ((string)(null)), table9, "Given ");
#line 61
 testRunner.When("I send a request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
 testRunner.Then("response code is \'201\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("07_Create User without phone")]
        public virtual void _07_CreateUserWithoutPhone()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07_Create User without phone", null, ((string[])(null)));
#line 68
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Attribute",
                        "Type",
                        "Value"});
            table10.AddRow(new string[] {
                        "phone",
                        "null",
                        ""});
#line 69
 testRunner.Given("request has body from file \'User\\user_create.json\'", ((string)(null)), table10, "Given ");
#line 72
 testRunner.When("I send a request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
 testRunner.Then("response code is \'201\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("08_Create User without website")]
        public virtual void _08_CreateUserWithoutWebsite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08_Create User without website", null, ((string[])(null)));
#line 75
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Attribute",
                        "Type",
                        "Value"});
            table11.AddRow(new string[] {
                        "website",
                        "null",
                        ""});
#line 76
 testRunner.Given("request has body from file \'User\\user_create.json\'", ((string)(null)), table11, "Given ");
#line 79
 testRunner.When("I send a request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
 testRunner.Then("response code is \'201\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("09_Create User without company field")]
        [NUnit.Framework.TestCaseAttribute("null", "Multi-layered client-server neural-net", "e-markets", null)]
        [NUnit.Framework.TestCaseAttribute("King-Crown", "null", "e-markets", null)]
        [NUnit.Framework.TestCaseAttribute("King-Crown", "Multi-layered client-server neural-net", "null", null)]
        public virtual void _09_CreateUserWithoutCompanyField(string name, string catchPhrase, string bs, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09_Create User without company field", null, exampleTags);
#line 82
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Attribute",
                        "Type",
                        "Value"});
            table12.AddRow(new string[] {
                        "company.name",
                        "string",
                        string.Format("{0}", name)});
            table12.AddRow(new string[] {
                        "company.catchPhrase",
                        "string",
                        string.Format("{0}", catchPhrase)});
            table12.AddRow(new string[] {
                        "company.bs",
                        "string",
                        string.Format("{0}", bs)});
#line 83
 testRunner.Given("request has body from file \'User\\user_create.json\'", ((string)(null)), table12, "Given ");
#line 88
 testRunner.When("I send a request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 89
 testRunner.Then("response code is \'201\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
